# GENERATE TIME: Thu Nov 10 12:00:51 2022
# CMD:
# basicsr/train.py -opt options/train_STSRGAN_x2.yml

# Use perceptual loss before ReLU as ESRGAN does

# general settings
name: 01_SwinSRGAN_x4_P48W8_USR_400k_B16G1_wandb
model_type: SRGANModel
scale: 2
num_gpu: 1
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: USR-248
    type: PairedImageDataset
    dataroot_gt: /content/zhizhan/datasets/USR-248/train_val/hr
    dataroot_lq: /content/zhizhan/datasets/USR-248/train_val/lr_2x
    filename_tmpl: '{}'
    io_backend:
      type: disk
      # (for lmdb)
      # type: lmdb

    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 2
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: underwater
    type: PairedImageDataset
    dataroot_gt: /content/zhizhan/datasets/USR-248/TEST/hr
    dataroot_lq: /content/zhizhan/datasets/USR-248/TEST/lr_2x
    io_backend:
      type: disk

# network structures
network_g:
  type: SwinIR
  upscale: 2
  in_chans: 3
  img_size: 64
  window_size: 8
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 180
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'

network_d:
  type: VGGStyleDiscriminator
  num_in_ch: 3
  num_feat: 64

# path
path:
  pretrain_network_g: ~ #experiments/001_MSRResNet_x4_f64b16_DIV2K_1000k_B16G1_wandb/models/net_g_1000000.pth
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [50000, 100000, 200000, 300000]
    gamma: 0.5

  total_iter: 400000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: !!float 1e-2
    reduction: mean
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv5_4': 1  # before relu
    vgg_type: vgg19
    use_input_norm: true
    range_norm: false
    perceptual_weight: 1.0
    style_weight: 0
    criterion: l1
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 5e-3

  net_d_iters: 1
  net_d_init_iters: 0

# validation settings
val:
  val_freq: !!float 5e3
  save_img: fasle

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: false

    ssim:
      type: calculate_ssim
      crop_border: 2
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
